[객체]
	- 의사나 행위가 미치는 대상
		- 사람, 자동차, 건물등
		- 주문, 생산, 관리등
	- 객체 VS 주체
[객체지향 프로그래밍]
	- 어떤 대상(객체)을 가지고 프로그래밍한다.
	
[클래스]
	- 객체의 속성과 기능을 코드로 구현한 것
		- 속성(멤버변수) 		: 대상의 본질적인 성질/특성/특징
		- 기능(메소드(멤버함수))	: 대상의 역할/작동/행위/이벤트
	- 클래스 사용처 : 1. 객체 설계도 클래스 2. main함수를 갖는 실행 클래스
	- 클래스 이름을 짓는 규칙 : 대문자로 시작하며 2단어이상이면 단어 앞을 대문자로 작성한다.
	- 형태 : 접근제어자 class 클래스명 { 맴버변수; 메소드; }
		ex) public class Student {
				// 멤버변수
				int studentID;
				String studentName;
				int grade;
				String address;
				
				// 메소드
				void eat() {
					System.out.println("밥을 먹었습니다.");
				}
			}
	
[메소드] 멤버함수 OR 함수
	1. 정의 : 하나의 기능을 수행하는 일련의 코드
	2. 함수 정의
		- 반환타입명 함수명(타입명 매개변수1, 타입명 매개변수2, ...) { 실행할 코드; return 반환값; }
		- 함수이름 : 변수명과 동일하게 작성, 카멜표기법 권장
		- 매개변수 : 함수의 입력으로 받는 변수(없을 수도 있음)
		- 반환값 : 함수를 수행한 결과를 되돌려주는 값(반환타입이 void이면 생략 가능)
	3. 함수 호출
		[1] 호출하고자 하는 함수가 같은 클래스에 선언
			- 함수명();
		[2] 호출하고자 하는 함수가 다른 클래스에 선언
			- 객체가 필요 /// 객체타입 객체명 = new 객체타입(); 객체명.함수명();
			- static를 사용하면 객체.함수명();으로 바로 사용 할 수 있다.		
			
[배열]
	1. 자료형이 같은 자료 여러개를 한번에 관리하는 자료구조의 일종(기본타입 8가지 + 클래스)
	2. 선언
		- 타입[] 변수명 = new 타입[길이];
			- 타입 : 배열에 저장할 자료들의 공통 타입
			- new : 객체/배열을 생성하기 위한 키워드/예약어
			- [길이] : 배열에 저장하는 자료의 최대 개수(고정길이)
				- 주의할 점 : 선언된 이후 배열의 길이는 변경이 불가능하다.
	3. 기본값(초기값) : 정수 --> 0, 실수 --> 0.0, 불리언 --> false, 객체 --> null
	
	
	
* 참고 : 자바의 이름 짓기 규약
	- 패키지/폴더명 : 모두 소문자로 한다.
	- 클래스명 : 파스칼 표기법 + 카멜 표기--> 첫글자는 대문자 새단어의 앞글자는 대문자로한다.
	- 변수/함수명 : 카멜 표기법 --> 첫글자는 소문자로 시작하고 중간에 새단어는 대문자로 한다.
	- 객체명/배열명 : 카멜 표기법

* 참고 : 용어정리
	- 객체		: 객체지향 프로그램의 대상, 생성된 인스턴스
	- 클래스		: 객체를 프로그래밍하기위해 코드로 만든 상태
	- 인스턴스		: 클래스가 메모리에 생성된 상태
	- 멤버변수		: 클래스의 속성, 특성
	- 메소드		: 멤버 변수를 이용하여 클래스의 기능을 구현
	- 참조변수		: 메모리에 생성된 인스턴스를 가르키는 변수
	- 참조값		: 생성된 인스턴스의 메모리 주소값